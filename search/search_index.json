{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is not a replacement for the Home Assistant Documentation or the Home Assistant Developer Docs, which are great.</p> <p>This website aims to be an addition to that - explain things in a different way, allow half complete notes from developers that have tried things with the API where full docs do not exist, etc.</p>"},{"location":"websocket/","title":"Intro","text":"<p>FIXME: header item says Websocket, not WebSocket</p> <p>If you are a developer interacting with Home Assistant in real time, it is likely you are using the Home Assistant WebSocket API. The HA docs about it are extensive, but by no means complete. It seems clear that that API is developed based on the needs of the usual HA web frontend, with supporting code in the backend, of course.</p> <p>This section of this website aims to collect notes for problems you might run into, for which those docs do not have answers.</p>"},{"location":"websocket/dashboards/icons/","title":"Icons","text":""},{"location":"websocket/dashboards/icons/#entity-icons","title":"Entity icons","text":"<p>If you have fetched a dashboard (using something like <code>{\"id\":4,\"type\":\"lovelace/config\",\"url_path\":\"dashboard-stuff\"}</code>), you might soon discover that most entities do not contain an icon. This appears to be because entity icons are usually inherited - except when set explicitly by the user.</p> <p>\"Inherited\" icon information needs to be fetched separately.</p> <p>The priorities for assigning icons appear to be as follows:</p> <ol> <li>an <code>icon</code> attribute on the entity (tends to be <code>mdi:something</code>)</li> <li>an <code>entity_picture</code> attribute on the entity (tends to not be <code>mdi:something</code>)</li> <li>a default from the Entity registry on platform+translation key</li> <li>a default from the Icon registry on domain+device_class</li> </ol> <p>On top of that, there can be state-dependent icons. (FIXME: put example in)</p>"},{"location":"websocket/dashboards/icons/#entity-registry","title":"Entity registry","text":"<p>First, ask for <code>config/entity_registry/list_for_display</code>. This yields something like (many entities omitted here):</p> <pre><code>{\n  \"id\": 4,\n  \"result\": {\n    \"entities\": [\n      {\n        \"di\": \"c387a39656f2b0c6ca2fac9e96cd2e02\",\n        \"ec\": 1,\n        \"ei\": \"sensor.sun_next_dawn\",\n        \"en\": \"Next dawn\",\n        \"hn\": true,\n        \"lb\": [],\n        \"pl\": \"sun\",\n        \"tk\": \"next_dawn\"\n      },\n      {\n        \"di\": \"c387a39656f2b0c6ca2fac9e96cd2e02\",\n        \"ec\": 1,\n        \"ei\": \"sensor.sun_next_dusk\",\n        \"en\": \"Next dusk\",\n        \"hn\": true,\n        \"lb\": [],\n        \"pl\": \"sun\",\n        \"tk\": \"next_dusk\"\n      },\n      {\n        \"ei\": \"person.voorkant\",\n        \"en\": \"voorkant\",\n        \"lb\": [],\n        \"pl\": \"person\"\n      },\n      {\n        \"di\": \"e06293557a341d6f8e5d088af9075f78\",\n        \"ei\": \"sensor.reistijd_naar_x\",\n        \"en\": \"reistijd naar x\",\n        \"lb\": [],\n        \"pl\": \"waze_travel_time\",\n        \"tk\": \"waze_travel_time\"\n      }\n    ],\n    \"entity_categories\": {\n      \"0\": \"config\",\n      \"1\": \"diagnostic\"\n    }\n  },\n  \"success\": true,\n  \"type\": \"result\"\n}\n</code></pre> <p>From <code>homeassistant/helpers/entity_registry.py</code> in homeassistant-core we can learn about a few of those keys:</p> <pre><code>    (\"ai\", \"area_id\", False),\n    (\"lb\", \"labels\", True),\n    (\"di\", \"device_id\", False),\n    (\"ic\", \"icon\", False),\n    (\"tk\", \"translation_key\", False),\n</code></pre> <p>Further down into the file, we learn <code>ei</code> is <code>entity_id</code> and <code>pl</code> is <code>platform</code>.</p> <p>For reference, a state for the <code>waze_travel_time</code> platform might look like this (edited for privacy):</p> <pre><code>  \"attributes\": {\n    \"attribution\": \"Powered by Waze\",\n    \"destination\": \"xx\",\n    \"device_class\": \"duration\",\n    \"distance\": 49.697,\n    \"duration\": 31.1,\n    \"friendly_name\": \"reistijd naar x\",\n    \"origin\": \"xxx\",\n    \"route\": \"xxxx\",\n    \"state_class\": \"measurement\",\n    \"unit_of_measurement\": \"min\"\n  },\n  \"context\": {\n    \"id\": \"01JE4H00W6X0QVSK6T2JQV1Z04\",\n    \"parent_id\": null,\n    \"user_id\": null\n  },\n  \"entity_id\": \"sensor.reistijd_naar_x\",\n  \"last_changed\": \"2024-12-02T18:09:09.781158+00:00\",\n  \"last_reported\": \"2024-12-02T20:29:08.358965+00:00\",\n  \"last_updated\": \"2024-12-02T20:29:08.358965+00:00\",\n  \"state\": \"31\"\n}\n\n</code></pre> <p>Note the lack of icon. Here's a state with an explicit icon:</p> <pre><code>{\n  \"attributes\": {\n    \"attribution\": \"Data provided by Frank Energie\",\n    \"friendly_name\": \"Average electricity price today\",\n    \"icon\": \"mdi:currency-eur\",\n    \"state_class\": \"measurement\",\n    \"unit_of_measurement\": \"\u20ac/kWh\"\n  },\n  \"context\": {\n    \"id\": \"01JDYJG6VE9NAXRP6HSS6T7GWV\",\n    \"parent_id\": null,\n    \"user_id\": null\n  },\n  \"entity_id\": \"sensor.average_electricity_price_today\",\n  \"last_changed\": \"2024-11-30T13:00:00.750150+00:00\",\n  \"last_reported\": \"2024-11-30T20:00:00.764866+00:00\",\n  \"last_updated\": \"2024-11-30T13:00:00.750150+00:00\",\n  \"state\": \"0.27983\"\n}\n</code></pre> <p>But for the <code>wave_travel_time</code> (<code>sensor.reistijd_naar_x</code>) entity, we shall need to do more work to find an icon. From the entity registry, we have learned that for that entity, the platform is <code>waze_travel_time</code> and the translation key is (also, but this is not always so) <code>waze_travel_time</code>. It appears that the translation key is useful as a key for other things too.</p>"},{"location":"websocket/dashboards/icons/#icon-registry","title":"Icon registry","text":"<p>We send <code>{\"category\":\"entity\",\"id\":4,\"integration\":\"waze_travel_time\",\"type\":\"frontend/get_icons\"}</code>.</p> <pre><code>{\n  \"id\": 4,\n  \"result\": {\n    \"resources\": {\n      \"waze_travel_time\": {\n        \"sensor\": {\n          \"waze_travel_time\": {\n            \"default\": \"mdi:car\"\n          }\n        }\n      }\n    }\n  },\n  \"success\": true,\n  \"type\": \"result\"\n}\n</code></pre> <p>So, the default icon for platform <code>waze_travel_time</code>, sensor <code>waze_travel_time</code> is <code>mdi:car</code>.</p> <p>Note that you can leave out <code>integration</code> to get icons for all relevant integrations.</p> <p>For a platform with multiple sensors/sensor types, here's the response to <code>{\"category\":\"entity\",\"id\":4,\"integration\":\"sun\",\"type\":\"frontend/get_icons\"}</code></p> <pre><code>{\n  \"id\": 4,\n  \"result\": {\n    \"resources\": {\n      \"sun\": {\n        \"sensor\": {\n          \"next_dawn\": {\n            \"default\": \"mdi:sun-clock\"\n          },\n          \"next_dusk\": {\n            \"default\": \"mdi:sun-clock\"\n          },\n          \"next_midnight\": {\n            \"default\": \"mdi:sun-clock\"\n          },\n          \"next_noon\": {\n            \"default\": \"mdi:sun-clock\"\n          },\n          \"next_rising\": {\n            \"default\": \"mdi:sun-clock\"\n          },\n          \"next_setting\": {\n            \"default\": \"mdi:sun-clock\"\n          },\n          \"solar_azimuth\": {\n            \"default\": \"mdi:sun-angle\"\n          },\n          \"solar_elevation\": {\n            \"default\": \"mdi:theme-light-dark\"\n          },\n          \"solar_rising\": {\n            \"default\": \"mdi:sun-clock\"\n          }\n        }\n      }\n    }\n  },\n  \"success\": true,\n  \"type\": \"result\"\n}\n</code></pre> <p>And so, the default icon for <code>next_dusk</code> is <code>mdi:sun-clock</code>.</p>"},{"location":"websocket/dashboards/icons/#todo","title":"TODO","text":"<p>There is also the Brands repository. It should likely be covered on this page or perhaps another one.</p>"}]}